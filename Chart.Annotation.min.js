/*!
 * Chart.Annotation.js
 * http://chartjs.org/
 * Version: 0.1.0
 *
 * Copyright 2016 Evert Timberg
 * Released under the MIT license
 * https://github.com/chartjs/Chart.Annotation.js/blob/master/LICENSE.md
 */
!function t(o,n,e){function r(i,l){if(!n[i]){if(!o[i]){var c="function"==typeof require&&require;if(!l&&c)return c(i,!0);if(a)return a(i,!0);var u=new Error("Cannot find module '"+i+"'");throw u.code="MODULE_NOT_FOUND",u}var s=n[i]={exports:{}};o[i][0].call(s.exports,function(t){var n=o[i][1][t];return r(n?n:t)},s,s.exports,t,o,n,e)}return n[i].exports}for(var a="function"==typeof require&&require,i=0;i<e.length;i++)r(e[i]);return r}({1:[function(t,o,n){},{}],2:[function(t,o,n){o.exports=function(t){function o(t){return!isNaN(t)&&isFinite(t)}function n(t,n,e){var r,a,i=t._model=t._model||{},l=e.scales[n.xScaleID],c=e.scales[n.yScaleID],u=e.chartArea,s=u.left,f=u.top,d=u.right,x=u.bottom;l&&(r=o(n.xMin)?l.getPixelForValue(n.xMin):u.left,a=o(n.xMax)?l.getPixelForValue(n.xMax):u.right,s=Math.min(r,a),d=Math.max(r,a)),c&&(r=o(n.yMin)?c.getPixelForValue(n.yMin):u.bottom,a=o(n.yMax)?c.getPixelForValue(n.yMax):u.top,f=Math.min(r,a),x=Math.max(r,a)),i.left=s,i.top=f,i.right=d,i.bottom=x,i.borderColor=n.borderColor,i.borderWidth=n.borderWidth,i.backgroundColor=n.backgroundColor}var e=t.Element.extend({draw:function(t,o){var n=this._view,e=t.chart.ctx;e.lineWidth=n.borderWidth,e.strokeStyle=n.borderColor,e.fillStyle=n.backgroundColor;var r=n.right-n.left,a=n.bottom-n.top;e.fillRect(n.left,n.top,r,a),e.strokeRect(n.left,n.top,r,a)}});return{Constructor:e,update:n}}},{}],3:[function(t,o,n){var e=t("chart.js");e="function"==typeof e?e:window.Chart;var r=e.helpers,a=r.isArray;e.Annotation=e.Annotation||{};var i=(e.Annotation.defaults={annotations:[]},t("./line.js")(e)),l=t("./box.js")(e),c=e.Annotation.annotationTypes={line:i.Constructor,box:l.Constructor},u=e.Annotation.updateFunctions={line:i.update,box:l.update},s=e.PluginBase.extend({beforeInit:function(t){var o=t.options;o.annotation=r.configMerge(o.annotation,e.Annotation.defaults);var n=o.annotation.annotations;if(a(n)){var i=t._annotationObjects=[];n.forEach(function(t,o){var n=c[t.type];n&&i.push(new n({_index:o}))})}},afterScaleUpdate:function(t){var o=t._annotationObjects,n=t.options.annotation;a(o)&&o.forEach(function(o,e){var r=n.annotations[o._index],a=u[r.type];a&&a(o,r,t)})},afterDraw:function(t,o){var n=t._annotationObjects,e=t.options.annotation;if(a(n)){t.chart.ctx;n.forEach(function(n){var r=e.annotations[n._index];n.transition(o).draw(t,r)})}}});o.exports=s,e.pluginService.register(new s)},{"./box.js":2,"./line.js":4,"chart.js":1}],4:[function(t,o,n){o.exports=function(t){function o(t,o,e){console.info(e.chart.ctx);var r=t._model=t._model||{},a=e.scales[o.scaleID],i=a?a.getPixelForValue(o.value):NaN,l=e.chartArea;isNaN(i)||(o.mode==n?(r.x1=l.left,r.x2=l.right,r.y1=r.y2=i):(r.y1=l.top,r.y2=l.bottom,r.x1=r.x2=i)),r.borderColor=o.borderColor,r.borderWidth=o.borderWidth}var n="horizontal",e=t.Element.extend({draw:function(t,o){var n=this._view,e=t.chart.ctx,r=t.scales[o.scaleID],a=r?r.getPixelForValue(o.value):NaN,i=t.chartArea;e.lineWidth=n.borderWidth,e.strokeStyle=n.borderColor,e.beginPath(),e.moveTo(n.x1,n.y1),e.lineTo(n.x2,n.y2),e.stroke(),e.fillText(o.label?o.label:"test",i.left,a+5),console.info(e)}});return{Constructor:e,update:o}}},{}]},{},[3]);